<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAANQSURBVDhPhZBbTJJhGMfNmdXmWqmbttXISDGpmBQg4ayheVbSzEDFadawjGkaIhgnQRAhFdN5
        +JKjnOSggpIddK6a5aLV1mV3NmtNl1duujXe+Gx8etHWxf+9eZ/39/6ef1hOU+FOoo8e2Z91OZ3CqmVe
        qWaUX6QV5GEpaaQTSafRUcfi4yLi4+L2hWb3ZuegppNJTxSiYUgtNdu1QwKPRceHMzthEr6cmuj0OS0d
        ptEBjkYpY8mFPDqvmZ1feaMUgwBuFucxxvoUDq1G6XYYIJXHZlT8K5PjWpnbCAmmzVq+uK2lCAFUlBZX
        j/XIxqHHMrtdN6KaturlLiMkggdDNnBm7EaBz2GWwTDpozY6AmCUFDJ1/d2usV65zQINCL1WfftL70j/
        B3/r5+Vl3sfZaeX8lNVo2GsjFfAYCIBOy2eMqiTj2n6l26YbUQcHuifdte+n5y6AydlLAIJKVoZ6Ve69
        RsoO4a4BvIL+Sbdjsbr8yzfG9e+fGGUrNk32qtObDMyOZKBSp39vbWQ/81gNXSEDpVRcgwB2SuyVT7zG
        ndl+i0kAU0kJQC9O+wUDLE4sEInxP2ro5T6nYVQSspAJ+UwEQA92MNbbaX5DwG3BABfmFBjmEdb+GuAA
        j49bLWC3vW72vHslsM+9NemeWkR8bh0CKCvMqYRL9JcWbfszM4D1LAZAwqvrcwu5wOaigAdc/NoBiTcQ
        q54HMVw94IslC7yWpl2DclpeRbBE03IOdct/hQK0WAwY5Ges+V5RgcVBAewH53+eVHgDR0UuEFmnArfq
        G160c5qrEMBNWgEzWKJrKZ20tUxMBQNoFOjhEH96n18CeksqqL9/bv20ciaAkntAVJ0CXGdULXIaG3YN
        yopyqzSdgtnFDPLmEu5MQJ2Y8FvTkflrypcKnhpTQO0d7Eas2B2IFrnBgSoRKCi5sdBYf5uelJQYHkYm
        kw9nZ1HL2HdZikdcDqQWtk+OqrsW7CaN32lv+2oysFYG++RfqF2W9USJbTO1QbrRynk4n5+bwwy+jdkx
        QKFQ+zAYTAQOhztEJBKjSSTScRKJmJJJpVJLrtEqa5iVLex79V3wB6y6W53BhxeCcweRFf4XNBodjsVi
        I/F4fBSBQDi8e1cY9gdf2db9aMOp2gAAAABJRU5ErkJggg==
</value>
  </data>
</root>